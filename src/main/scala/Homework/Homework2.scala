package Homework

import scala.io.StdIn as StdIn

/*
Объявление переменных и типов данных

1. Создайте переменные следующих типов:
    > Целое число (Int) для хранения возраста.
    > Дробное число (Double) для хранения веса.
    > Строку (String) для хранения имени.
    > Логическое значение (Boolean) для хранения статуса (студент или не студент).
2. Выведите значения всех переменных на экран с помощью функции println.
3. Напишите функцию, которая принимает два целых числа и возвращает их сумму.
4. Вызовите эту функцию с любыми двумя числами и выведите результат на экран.
5. Напишите функцию, которая принимает возраст и возвращает строку "Молодой", если возраст меньше 30, и "Взрослый",
   если возраст 30 или больше.
6. Вызовите эту функцию с вашей переменной возраста и выведите результат на экран.
7. Напишите цикл, который выводит на экран числа от 1 до 10.
8. Создайте список имен студентов и выведите каждое имя на экран с помощью цикла.
9. Напишите программу, которая выполняет следующие действия:
    > Запрашивает у пользователя ввод имени, возраста и статуса (студент или нет).
    > Использует написанные выше функции и выводит на экран информацию о пользователе и его возрастную категорию.
    > Изучить и научиться использовать for comprehension в языке программирования Scala для работы
      с коллекциями и опциями.
10. Создайте список чисел от 1 до 10.
11. Используйте for comprehension, чтобы создать новый список, содержащий квадраты чисел из исходного списка.
12. Используйте for comprehension, чтобы создать новый список, содержащий только четные числа из исходного списка.
 */

object Homework2 {
  def main(args: Array[String]): Unit = {

    // 1.Создайте переменные
    val age: Int = 25             // Целое число (Int) для хранения возраста.
    val weight: Double = 78.5     // Дробное число (Double) для хранения веса.
    val name: String = "Peter"    // Строку (String) для хранения имени.
    val isStudent: Boolean = true // Логическое значение (Boolean) для хранения статуса (студент или не студент).

    println("------------------------ Task 2 ---------------------------------")
    // 2. Выведите значения всех переменных на экран с помощью функции println
    println(s"age is $age; weight is $weight; name is $name; isStudent? - $isStudent")

    // 3.Напишите функцию, которая принимает два целых числа и возвращает их сумму
    /**
     * Функция возвращает сумму двух целых чисел
     * @param x - Integer
     * @param y - Integer
     * @return - x + y
     */
    def sumTwoNumber(x: Int, y: Int): Int = {
      x + y
    }

    println("------------------------ Task 4 ---------------------------------")
    // 4.Вызовите эту функцию с любыми двумя числами и выведите результат на экран
    val result: Int = sumTwoNumber(5, 10)
    println(result) // 15


    // 5. Напишите функцию, которая принимает возраст и возвращает строку "Молодой", если возраст меньше 30, и "Взрослый",
    //   если возраст 30 или больше
    /**
     * Функция проверяет возраст пользователя
     * @param age - Double
     * @return - String
     */
    def checkAge(age: Double): String = {
      if (age < 30) "Молодой"
      else "Взрослый"
    }


    println("------------------------ Task 6 ---------------------------------")
    // 6. Вызовите эту функцию с вашей переменной возраста и выведите результат на экран
    val myAge: Int = 37
    println(checkAge(myAge))  // "Взрослый"


    println("------------------------ Task 7 ---------------------------------")
    // 7. Напишите цикл, который выводит на экран числа от 1 до 10
    for (i <- 1 to 10) {
      println(s"Number ${i}")
    }


    println("------------------------ Task 8 ---------------------------------")
    // 8. Создайте список имен студентов и выведите каждое имя на экран с помощью цикла
    val namesOfStudents1: List[String] = List("Peter", "Alex", "Maks", "Helga", "Anna")
    val namesOfStudents2 = "Peter" :: "Alex" :: "Maks" :: "Helga" :: "Anna" :: Nil
    namesOfStudents1.foreach(name => println(s"Name is ${name}"))


    println("------------------------ Task 9 ---------------------------------")
    // 9. Напишите программу, которая выполняет следующие действия:
    //    > Запрашивает у пользователя ввод имени, возраста и статуса (студент или нет).
    //    > Использует написанные выше функции и выводит на экран информацию о пользователе
    //      и его возрастную категорию.

    /**
     * Функция проверяет ответ пользователя на вопрос: Являетесь ли вы студентом?
     * @param str - String
     * @return - true or false
     */
    def checkIsStudent(str: String): Boolean = {
      if (str.equals("yes")) true
      else false
    }

    println("------------------------ Start Program ---------------------------------")
    println("Собираем информацию о пользователе.")

    println("Введите ваше имя: ")
    val nameUser: String = StdIn.readLine()

    println("Введите ваш возраст: ")
    val ageUser: Double = StdIn.readLine().toDouble

    println("Являетесь ли вы студентом? yes/no")
    val userIsStudent: String = StdIn.readLine().toLowerCase

    println("--- Информация о пользователе ---")

    println(s"Name: ${nameUser}")
    println(s"Is a Student: ${checkIsStudent(userIsStudent)}")
    println(s"Category age: ${checkAge(ageUser)}")
    println("------------------------ End Program ---------------------------------")

    println()


    // 10. Создайте список чисел от 1 до 10
    val array1to10: List[Int] = List(1,2,3,4,5,6,7,8,9,10)

    println("------------------------ Task 11 ---------------------------------")
    // 11. Используйте for comprehension, чтобы создать новый список,
    // содержащий квадраты чисел из исходного списка
    val arraySquare = for {
      elem <- array1to10
    } yield elem * elem
    arraySquare.foreach(x => print(s"$x "))

    println()

    println("------------------------ Task 12 ---------------------------------")
    // 12. Используйте for comprehension, чтобы создать новый список,
    // содержащий только четные числа из исходного списка
    val arrayEvenNum = for {
      elem <- array1to10
      if elem % 2 == 0
    } yield elem

    arrayEvenNum.foreach(x => print(s"$x "))
  }
}
























